var searchIndex = {};
searchIndex['main'] = {"items":[[5,"main","main","This is the main function that will interact with the system/game. In terms of how it works, it creates a HashMap that stores the reward for taking an action at a particular state. After peforming the action, the value is updated with the reward found in the next state, and the max reward that can be gotten from any actions taken from the next state. This causes a form of backpropogation which allows for the algorithm to know how to get to the state with the highest reward.",null,{"inputs":[],"output":null}],[0,"structs","","",null,null],[3,"State","main::structs","Describes the current state at which the system is in. At the moment it only allows for one i32 variable but I will extend it to maybe 5 by the end.",null,null],[12,"x_1","","",0,null],[3,"Key","","A tuple of a state and an action (which is a string), which is used as a key in the q_values HashMap to find the value of taking a certain action while in a certain state",null,null],[12,"state","","",1,null],[12,"action","","",1,null],[11,"fmt","","",0,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"assert_receiver_is_total_eq","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"state"},{"name":"i32"}],"output":{"name":"state"}}],[11,"fmt","","",1,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"assert_receiver_is_total_eq","","",1,null],[11,"hash","","",1,null],[11,"new","","",1,{"inputs":[{"name":"key"},{"name":"state"},{"name":"str"}],"output":{"name":"key"}}]],"paths":[[3,"State"],[3,"Key"]]};
initSearch(searchIndex);
